/* tslint:disable */
/* eslint-disable */
//----------------------
// <auto-generated>
//     Generated using the NSwag toolchain v13.7.0.0 (NJsonSchema v10.1.24.0 (Newtonsoft.Json v12.0.0.0)) (http://NSwag.org)
// </auto-generated>
//----------------------
// ReSharper disable InconsistentNaming

import * as moment from 'moment';
import 'moment-duration-format';


export class HomeIndexModel {
    currentSeason?: HomeIndexSeason | undefined;
    topAiringAnime?: HomeIndexAnime[] | undefined;
    topUpcomingAnime?: HomeIndexAnime[] | undefined;
    mostPopularAnime?: HomeIndexAnime[] | undefined;
    currentSeasonAnime?: HomeIndexAnime[] | undefined;
    recentlyUpdatedAnime?: HomeIndexAnime[] | undefined;

    init(_data?: any) {
        if (_data) {
            this.currentSeason = _data["currentSeason"] ? HomeIndexSeason.fromJS(_data["currentSeason"]) : <any>undefined;
            if (Array.isArray(_data["topAiringAnime"])) {
                this.topAiringAnime = [] as any;
                for (let item of _data["topAiringAnime"])
                    this.topAiringAnime!.push(HomeIndexAnime.fromJS(item));
            }
            if (Array.isArray(_data["topUpcomingAnime"])) {
                this.topUpcomingAnime = [] as any;
                for (let item of _data["topUpcomingAnime"])
                    this.topUpcomingAnime!.push(HomeIndexAnime.fromJS(item));
            }
            if (Array.isArray(_data["mostPopularAnime"])) {
                this.mostPopularAnime = [] as any;
                for (let item of _data["mostPopularAnime"])
                    this.mostPopularAnime!.push(HomeIndexAnime.fromJS(item));
            }
            if (Array.isArray(_data["currentSeasonAnime"])) {
                this.currentSeasonAnime = [] as any;
                for (let item of _data["currentSeasonAnime"])
                    this.currentSeasonAnime!.push(HomeIndexAnime.fromJS(item));
            }
            if (Array.isArray(_data["recentlyUpdatedAnime"])) {
                this.recentlyUpdatedAnime = [] as any;
                for (let item of _data["recentlyUpdatedAnime"])
                    this.recentlyUpdatedAnime!.push(HomeIndexAnime.fromJS(item));
            }
        }
    }

    static fromJS(data: any): HomeIndexModel {
        data = typeof data === 'object' ? data : {};
        let result = new HomeIndexModel();
        result.init(data);
        return result;
    }

    toJSON(data?: any) {
        data = typeof data === 'object' ? data : {};
        data["currentSeason"] = this.currentSeason ? this.currentSeason.toJSON() : <any>undefined;
        if (Array.isArray(this.topAiringAnime)) {
            data["topAiringAnime"] = [];
            for (let item of this.topAiringAnime)
                data["topAiringAnime"].push(item.toJSON());
        }
        if (Array.isArray(this.topUpcomingAnime)) {
            data["topUpcomingAnime"] = [];
            for (let item of this.topUpcomingAnime)
                data["topUpcomingAnime"].push(item.toJSON());
        }
        if (Array.isArray(this.mostPopularAnime)) {
            data["mostPopularAnime"] = [];
            for (let item of this.mostPopularAnime)
                data["mostPopularAnime"].push(item.toJSON());
        }
        if (Array.isArray(this.currentSeasonAnime)) {
            data["currentSeasonAnime"] = [];
            for (let item of this.currentSeasonAnime)
                data["currentSeasonAnime"].push(item.toJSON());
        }
        if (Array.isArray(this.recentlyUpdatedAnime)) {
            data["recentlyUpdatedAnime"] = [];
            for (let item of this.recentlyUpdatedAnime)
                data["recentlyUpdatedAnime"].push(item.toJSON());
        }
        return data; 
    }
}

export class HomeIndexSeason {
    id!: string;
    airingSeason!: AiringSeason;
    year!: number;

    init(_data?: any) {
        if (_data) {
            this.id = _data["id"];
            this.airingSeason = _data["airingSeason"];
            this.year = _data["year"];
        }
    }

    static fromJS(data: any): HomeIndexSeason {
        data = typeof data === 'object' ? data : {};
        let result = new HomeIndexSeason();
        result.init(data);
        return result;
    }

    toJSON(data?: any) {
        data = typeof data === 'object' ? data : {};
        data["id"] = this.id;
        data["airingSeason"] = this.airingSeason;
        data["year"] = this.year;
        return data; 
    }
}

export enum AiringSeason {
    Winter = 0,
    Spring = 1,
    Summer = 2,
    Fall = 3,
}

export class HomeIndexAnime {
    id!: string;
    rank!: number;
    name?: string | undefined;
    showType!: ShowType;
    episodeCount!: number;
    score!: number;
    membersLiked!: number;
    imageUrl?: string | undefined;

    init(_data?: any) {
        if (_data) {
            this.id = _data["id"];
            this.rank = _data["rank"];
            this.name = _data["name"];
            this.showType = _data["showType"];
            this.episodeCount = _data["episodeCount"];
            this.score = _data["score"];
            this.membersLiked = _data["membersLiked"];
            this.imageUrl = _data["imageUrl"];
        }
    }

    static fromJS(data: any): HomeIndexAnime {
        data = typeof data === 'object' ? data : {};
        let result = new HomeIndexAnime();
        result.init(data);
        return result;
    }

    toJSON(data?: any) {
        data = typeof data === 'object' ? data : {};
        data["id"] = this.id;
        data["rank"] = this.rank;
        data["name"] = this.name;
        data["showType"] = this.showType;
        data["episodeCount"] = this.episodeCount;
        data["score"] = this.score;
        data["membersLiked"] = this.membersLiked;
        data["imageUrl"] = this.imageUrl;
        return data; 
    }
}

export enum ShowType {
    Unknown = 0,
    TV = 1,
    Movie = 2,
    OVA = 3,
    ONA = 4,
    Special = 5,
}

export class ProblemDetails {
    type?: string | undefined;
    title?: string | undefined;
    status?: number | undefined;
    detail?: string | undefined;
    instance?: string | undefined;
    extensions?: { [key: string]: any; } | undefined;

    init(_data?: any) {
        if (_data) {
            this.type = _data["type"];
            this.title = _data["title"];
            this.status = _data["status"];
            this.detail = _data["detail"];
            this.instance = _data["instance"];
            if (_data["extensions"]) {
                this.extensions = {} as any;
                for (let key in _data["extensions"]) {
                    if (_data["extensions"].hasOwnProperty(key))
                        this.extensions![key] = _data["extensions"][key];
                }
            }
        }
    }

    static fromJS(data: any): ProblemDetails {
        data = typeof data === 'object' ? data : {};
        let result = new ProblemDetails();
        result.init(data);
        return result;
    }

    toJSON(data?: any) {
        data = typeof data === 'object' ? data : {};
        data["type"] = this.type;
        data["title"] = this.title;
        data["status"] = this.status;
        data["detail"] = this.detail;
        data["instance"] = this.instance;
        if (this.extensions) {
            data["extensions"] = {};
            for (let key in this.extensions) {
                if (this.extensions.hasOwnProperty(key))
                    data["extensions"][key] = this.extensions[key];
            }
        }
        return data; 
    }
}

export class AnimeViewModel {
    id!: string;
    seasonId?: string | undefined;
    japaneseName?: string | undefined;
    englishName?: string | undefined;
    synopsys?: string | undefined;
    background?: string | undefined;
    source?: string | undefined;
    episodeCount?: number | undefined;
    startAirDate?: moment.Moment | undefined;
    endAirDate?: moment.Moment | undefined;
    broadcastTime?: moment.Moment | undefined;
    showType!: ShowType;
    tvRating!: TVRating;
    imageUrl?: string | undefined;

    init(_data?: any) {
        if (_data) {
            this.id = _data["id"];
            this.seasonId = _data["seasonId"];
            this.japaneseName = _data["japaneseName"];
            this.englishName = _data["englishName"];
            this.synopsys = _data["synopsys"];
            this.background = _data["background"];
            this.source = _data["source"];
            this.episodeCount = _data["episodeCount"];
            this.startAirDate = _data["startAirDate"] ? moment(_data["startAirDate"].toString()) : <any>undefined;
            this.endAirDate = _data["endAirDate"] ? moment(_data["endAirDate"].toString()) : <any>undefined;
            this.broadcastTime = _data["broadcastTime"] ? moment(_data["broadcastTime"].toString()) : <any>undefined;
            this.showType = _data["showType"];
            this.tvRating = _data["tvRating"];
            this.imageUrl = _data["imageUrl"];
        }
    }

    static fromJS(data: any): AnimeViewModel {
        data = typeof data === 'object' ? data : {};
        let result = new AnimeViewModel();
        result.init(data);
        return result;
    }

    toJSON(data?: any) {
        data = typeof data === 'object' ? data : {};
        data["id"] = this.id;
        data["seasonId"] = this.seasonId;
        data["japaneseName"] = this.japaneseName;
        data["englishName"] = this.englishName;
        data["synopsys"] = this.synopsys;
        data["background"] = this.background;
        data["source"] = this.source;
        data["episodeCount"] = this.episodeCount;
        data["startAirDate"] = this.startAirDate ? this.startAirDate.toISOString() : <any>undefined;
        data["endAirDate"] = this.endAirDate ? this.endAirDate.toISOString() : <any>undefined;
        data["broadcastTime"] = this.broadcastTime ? this.broadcastTime.toISOString() : <any>undefined;
        data["showType"] = this.showType;
        data["tvRating"] = this.tvRating;
        data["imageUrl"] = this.imageUrl;
        return data; 
    }
}

export enum TVRating {
    Unknown = 0,
    G = 1,
    PG_13 = 2,
    R_17 = 3,
    R = 4,
}

export class AnimeEditCommand {
    id!: string;
    seasonId?: string | undefined;
    japaneseName?: string | undefined;
    englishName?: string | undefined;
    synopsys?: string | undefined;
    background?: string | undefined;
    source?: string | undefined;
    episodeCount?: number | undefined;
    startAirDate?: moment.Moment | undefined;
    endAirDate?: moment.Moment | undefined;
    broadcastTime?: moment.Duration | undefined;
    showType!: ShowType;
    tvRating!: TVRating;
    image?: any | undefined;
    imageUrl?: string | undefined;

    init(_data?: any) {
        if (_data) {
            this.id = _data["id"];
            this.seasonId = _data["seasonId"];
            this.japaneseName = _data["japaneseName"];
            this.englishName = _data["englishName"];
            this.synopsys = _data["synopsys"];
            this.background = _data["background"];
            this.source = _data["source"];
            this.episodeCount = _data["episodeCount"];
            this.startAirDate = _data["startAirDate"] ? moment(_data["startAirDate"].toString()) : <any>undefined;
            this.endAirDate = _data["endAirDate"] ? moment(_data["endAirDate"].toString()) : <any>undefined;
            this.broadcastTime = _data["broadcastTime"] ? moment.duration(_data["broadcastTime"].toString()) : <any>undefined;
            this.showType = _data["showType"];
            this.tvRating = _data["tvRating"];
            this.image = _data["image"];
            this.imageUrl = _data["imageUrl"];
        }
    }

    static fromJS(data: any): AnimeEditCommand {
        data = typeof data === 'object' ? data : {};
        let result = new AnimeEditCommand();
        result.init(data);
        return result;
    }

    toJSON(data?: any) {
        data = typeof data === 'object' ? data : {};
        data["id"] = this.id;
        data["seasonId"] = this.seasonId;
        data["japaneseName"] = this.japaneseName;
        data["englishName"] = this.englishName;
        data["synopsys"] = this.synopsys;
        data["background"] = this.background;
        data["source"] = this.source;
        data["episodeCount"] = this.episodeCount;
        data["startAirDate"] = this.startAirDate ? this.startAirDate.toISOString() : <any>undefined;
        data["endAirDate"] = this.endAirDate ? this.endAirDate.toISOString() : <any>undefined;
        data["broadcastTime"] = this.broadcastTime ? this.broadcastTime.format('d.hh:mm:ss.SS', { trim: false }) : <any>undefined;
        data["showType"] = this.showType;
        data["tvRating"] = this.tvRating;
        data["image"] = this.image;
        data["imageUrl"] = this.imageUrl;
        return data; 
    }
}

export class AnimeCreateCommand {
    seasonId?: string | undefined;
    japaneseName?: string | undefined;
    englishName?: string | undefined;
    synopsys?: string | undefined;
    background?: string | undefined;
    source?: string | undefined;
    episodeCount?: number | undefined;
    startAirDate?: moment.Moment | undefined;
    endAirDate?: moment.Moment | undefined;
    broadcastTime?: moment.Moment | undefined;
    showType!: ShowType;
    tvRating!: TVRating;
    image?: any | undefined;

    init(_data?: any) {
        if (_data) {
            this.seasonId = _data["seasonId"];
            this.japaneseName = _data["japaneseName"];
            this.englishName = _data["englishName"];
            this.synopsys = _data["synopsys"];
            this.background = _data["background"];
            this.source = _data["source"];
            this.episodeCount = _data["episodeCount"];
            this.startAirDate = _data["startAirDate"] ? moment(_data["startAirDate"].toString()) : <any>undefined;
            this.endAirDate = _data["endAirDate"] ? moment(_data["endAirDate"].toString()) : <any>undefined;
            this.broadcastTime = _data["broadcastTime"] ? moment(_data["broadcastTime"].toString()) : <any>undefined;
            this.showType = _data["showType"];
            this.tvRating = _data["tvRating"];
            this.image = _data["image"];
        }
    }

    static fromJS(data: any): AnimeCreateCommand {
        data = typeof data === 'object' ? data : {};
        let result = new AnimeCreateCommand();
        result.init(data);
        return result;
    }

    toJSON(data?: any) {
        data = typeof data === 'object' ? data : {};
        data["seasonId"] = this.seasonId;
        data["japaneseName"] = this.japaneseName;
        data["englishName"] = this.englishName;
        data["synopsys"] = this.synopsys;
        data["background"] = this.background;
        data["source"] = this.source;
        data["episodeCount"] = this.episodeCount;
        data["startAirDate"] = this.startAirDate ? this.startAirDate.toISOString() : <any>undefined;
        data["endAirDate"] = this.endAirDate ? this.endAirDate.toISOString() : <any>undefined;
        data["broadcastTime"] = this.broadcastTime ? this.broadcastTime.toISOString() : <any>undefined;
        data["showType"] = this.showType;
        data["tvRating"] = this.tvRating;
        data["image"] = this.image;
        return data; 
    }
}

export interface FileParameter {
    data: any;
    fileName: string;
}

export interface FileResponse {
    data: Blob;
    status: number;
    fileName?: string;
    headers?: { [name: string]: any };
}